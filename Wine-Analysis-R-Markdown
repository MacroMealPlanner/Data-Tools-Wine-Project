---
output: html_document
title: "Predicting Point Score of Wine based on Different Attributes."
authors:
- name: Luke Barousse, Mariel Behnke, Chad Giganti, Alex Masica, Eric Weien
  affiliation: Ohio State University
keywords: "wine, reviews, crunk"
date: "`r format(Sys.time(), '%B %d, %Y')`"
geometry: margin=1in
fontfamily: mathpazo
fontsize: 11pt
spacing: double
endnote: no
---


# Introduction

# Initial analysis
First, we started by installing all the necessary packages and the data set.

```{r packages, message = FALSE, warning = FALSE, error = FALSE}
library(tidyverse)
library(dplyr)
library(moderndive)
library(readr)
winemag_data_130k_v2 <- read_csv("Downloads/wine-reviews/winemag-data-130k-v2.csv")
winedata <- winemag_data_130k_v2
```

```{r themes}

custom_theme <- function (){
    theme_bw() +
     theme(
     panel.background = element_rect(fill = "lightblue",
                                    colour = "lightblue",
                                    size = 0.5, linetype = "solid"),
     panel.grid.major = element_line(size = 0.5, linetype = 'solid',
                                     colour = "white"),
     panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
                                     colour = "white")
   )
}

```
We started by assessing if the data we had was of a quality to identify potential relationships.  We first started by analyzing the data set by doing a manual interpratation of all the results and seeing if there where any abnormalites.  Based on the high quanitity (130K) and low abnormalities we deteremined the data was satisfactory during this test.  The following shows a breakdown of the dataset.

```{r dataglimpse}
glimpse(winedata)
```

Next, we conducted a test on normality to evaluate if the large volume of data collected followed a normal distribution, as we would expect wtih this type and quanity of data.  Using Nortest we tested both price and points as they were the only numerical variables and all others where catagorical.  

```{r normality, warning = FALSE, error = FALSE}
library(nortest)
ad.test(winedata$price)
ad.test(winedata$points)
```
Analyzing these two variables we found that the dataset was satisfactory to used based on having a p-value of less than 5% for both these key variables.

## Average reviews per country

```{r avgreviews}
winedata %>%
  filter(country  %in% c("US", "France", "Italy", "Spain", "Portugal", "Chile", "Argentina", "Austria", "Australia", "Germany")) %>%
  group_by(country) %>%
  summarise(avgPoints = mean(points)) %>%
  arrange(desc(avgPoints))
```


## Number reviews per country (Top 10)

```{r reviewscountry, warning = FALSE}
winedata %>%
  group_by(country) %>%
  count(country) %>%
  arrange(desc(n)) %>%
  head(10) %>%
  ggplot(aes(x=fct_reorder(country, desc(n)), y=n, fill = country)) + 
  geom_col() +  xlab("Country") + ylab("Number of Reviews") + coord_flip() +
  theme(legend.position="none") + custom_theme()
```

## Variety/Price per country (Top 10)

```{r varietycountry, warning= FALSE}
top_country_variety <- winedata %>%
  mutate(log10price = log(price)) %>%
  group_by(country) %>%
  filter(country %in% c("US","France","Italy","Spain","Portugal","Chile","Argentina","Austria","Australia","Germany")) %>%
  filter(variety %in% c("Pinot Noir", "Chardonnay","Cabernet Sauvignon","Red Blend", "Bordeaux-style Red Blend","Riesling","Sauvignon Blanc","Syrah","RosÃ©","Merlot"))
ggplot(top_country_variety, aes(x=country, y= price)) +  
  geom_jitter(alpha = 0.5, aes(color=variety)) +
  geom_boxplot(alpha = 0) +
  scale_y_log10() +  xlab("Country") + ylab("Price (Log Scale)")  +
  custom_theme() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Price per variety for top 10 countries

```{r varieties, warning= FALSE}
variety_by_top_country <- winedata %>%
  mutate(log10price = log(price)) %>%
  group_by(variety) %>%
  filter(country %in% c("US","France","Italy","Spain","Portugal","Chile","Argentina","Austria","Australia","Germany")) %>%
  filter(variety %in% c("Pinot Noir", "Chardonnay","Cabernet Sauvignon","Red Blend", "Bordeaux-style Red Blend","Riesling","Sauvignon Blanc","Syrah","RosÃ©","Merlot"))
ggplot(variety_by_top_country, aes(x=variety, y= price)) +  
  geom_jitter(alpha = 0.5, aes(color=variety)) +
  geom_boxplot(alpha = 0) +
  scale_y_log10() +  xlab("Country") + ylab("Price (Log Scale)") +
  theme(legend.position="none") +
  custom_theme() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

#Regression analysis to explain price for consumers

## Using a single variables to understand correlation to point ranking
We first plan to go through and compare the prediction of points based on a single value.  We focus on the following variables:
Points
Variety
Country
Province
Taster

```{r correlation}
library(ggcorrplot)
numeric_winedata <- winedata %>%
  select(points, price)
corr <- round(cor(numeric_winedata), 2)
ggcorrplot(corr, 
           method="circle", 
           colors = c("tomato2", "white", "springgreen3"), 
           title="Correlogram of Wine Data") + 
          custom_theme()
```


### Analyzing points
```{r points}
lm_points_price <- lm(log10price ~ points, top_country_variety)
get_regression_table(lm_points_price)
get_regression_points(lm_points_price)
get_regression_summaries(lm_points_price)
```
This begins to show a slight correllation to between price and points.  With the point scale starting at 87.6 and then increasing .027 for each dollar increase in price.  However analayzing the full data set, one can see that the lowest score is actually around 79 and increases from there.

```{r pricetopoints, warning= FALSE}
ggplot(top_country_variety, aes(x = points, y= price, color = country)) + 
  geom_jitter() + geom_smooth(method = "lm") + 
  scale_y_log10() +  ylab("Price (Log Scale)") + xlab("Points") +  custom_theme()
```
We decided to take this a step further and analyze this visulally breaking it out by country. One can see from the visualization that there is a strong correlation between the price and points.  

### Analyzing variety

```{r variety}
lm_points_variety <- lm(log10price ~ variety, top_country_variety)
get_regression_table(lm_points_variety)
get_regression_summaries(lm_points_variety)
```
This will endu up showing our lowest correlation related to point scale.  Interestingly enough, we felt with our inital research that this would be a key correlator of point ranking, however this disproved that.


### Analyzing country
```{r country}
lm_country <- lm(log10price ~ country, top_country_variety)
get_regression_table(lm_country)
get_regression_summaries(lm_country)
```
Using Argentia as the base country, it appears that the top 10 countries vary in range from 86.3 to 90.8, with Austria having the highest point value based on country alone.  Although all variables are significant at the 5% level, the R^2 is even small than that for the evaluation against price.

### Analyzing province
```{r pointsToprovince}
lm_province <- lm(log10price ~ province, top_country_variety)
get_regression_summaries(lm_province)
```
As expected based on having more provinces than countries (148 provinces vs 10 countries), we saw a higher correlation between the variables.  However if you look further in the p-values (too many values to print here), more than half of the provinces are insignificant at the 5% level.

### Analyzing tasters
```{r taster}
lm_taster <- lm(log10price ~ taster_name, top_country_variety)
get_regression_table(lm_taster)
get_regression_summaries(lm_taster)
```
Analyzing 17 different tasters we see that the we have a correlation that is even higher than province and country, but still doesn't meet the level of price.  Looking at the significance of these raters, we see that only 4 of the raters are insignificant at the 5% level.

## Using multiple variables to understand correlation to point ranking
Looking at the previous results, we found that Price, Tasters, and Province had the stronest correlation, in that order.  Country and variety had the lowest correlation.

### Analyzing top 3 variables
```{r pointsTop3}
lm_top3 <- lm(log10price ~ points + taster_name + province, top_country_variety)
get_regression_summaries(lm_top3)
```

### Analyzing all 5 variables
```{r pointsAll5}
lm_all5 <- lm(log10price ~ points + taster_name + province + country + variety, top_country_variety)
get_regression_summaries(lm_all5)
```
```{r america}
top_country_variety %>%
  filter(price != "N/A") %>%
  filter(country == "US") %>%
  filter(province != "America") %>% filter(province != "Washington-Oregon") %>%
  ggplot(aes(x = province, y = points, color = log10price, color = qsec)) + geom_jitter() + labs(x = "Province", y = "Points") + scale_color_gradient(low = "White", high = "red") + custom_theme() + theme(
    axis.text.x = element_text(angle = 45, hjust = 1)) 
```

```{r france}
top_country_variety %>%
  filter(price != "N/A") %>%
  filter(country == "France") %>%
  ggplot(aes(x = province, y = points, color = log10price, color = qsec)) + geom_jitter() + labs(x = "Province", y = "Points") + scale_color_gradient(low = "White", high = "red") + custom_theme() + theme(
    axis.text.x = element_text(angle = 45, hjust = 1)) 
```

```{r italy}
top_country_variety %>%
  filter(price != "N/A") %>%
  filter(country == "Italy") %>%
  ggplot(aes(x = province, y = points, color = log10price, color = qsec)) + geom_jitter() + labs(x = "Province", y = "Points") + scale_color_gradient(low = "White", high = "red") + custom_theme() + theme(
    axis.text.x = element_text(angle = 45, hjust = 1)) 
```

```{r model}
# Randomly reorder the rows and remove N/A's
top_country_variety$description <- NULL 
wine_reviews_shuffled <- top_country_variety %>%
  filter(province != "California") %>% filter(province != "Idaho") %>% 
  filter(province != "Michigan") %>% filter(province != "New York") %>% 
  filter(province != "Oregon") %>%  filter(province != "Virginia") %>% 
  filter(province != "Washington") %>%
  sample_frac(size = 1, replace = FALSE) %>%
  filter(!is.na(log10price)) %>%
  filter(!is.na(points)) %>%
  filter(!is.na(province)) %>%
  filter(!is.na(taster_name))
glimpse(wine_reviews_shuffled)

# Train/test split
train <- wine_reviews_shuffled %>%
  slice(1:5000)
glimpse(train)
test <- wine_reviews_shuffled %>%
  slice(5001:64000)
glimpse(test)

trainmodel <- lm(log10price ~ points + province + taster_name, data=train)

# Make predictions on test set
residualdf <- get_regression_points(trainmodel, newdata = test)
glimpse(residualdf)
test$residual<- residualdf$residual
glimpse(test)
mean(test$residual)-2*sd(test$residual)
mean(test$residual)-3*sd(test$residual)

#this is my test statists
goodprice <- test %>%
  subset(residual < -.951)
goodprice

#yields 370 wines
greatprice <- test %>%
  subset(residual< -1.4273)
greatprice

max(goodprice$price)
max(goodprice$points)


```
